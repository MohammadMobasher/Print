@using DataLayer.ViewModels.BreadCrumb
@using Newtonsoft.Json

<link href="~/assets/plugins/fullcalendar/core-4.3.1/main.css" rel="stylesheet" />
<link href="~/assets/plugins/fullcalendar/daygrid-4.3.0/main.css" rel="stylesheet" />

<script src="~/assets/plugins/fullcalendar/core-4.3.1/main.js"></script>
<script src="~/assets/plugins/fullcalendar/daygrid-4.3.0/main.js"></script>


@{
    ViewData["Title"] = "Calendar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    TempData["BreadCrumb"] = new List<Breadcrumb>
{

new Breadcrumb
{
Title = "Calender",

}
};
}

<div class="full-calendar">
    <div id="calendar">

    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            plugins: ['dayGrid'],
            defaultView: 'dayGridMonth',
            eventRender: function (info) {
                var ntoday = moment().format('YYYYMMDD');
                var eventStart = moment(info.event.start).format('YYYYMMDD');
                info.el.setAttribute("title", info.event.extendedProps.description);
                info.el.setAttribute("data-toggle", "tooltip");
                if (eventStart < ntoday) {
                    info.el.classList.add("fc-past-event");
                } else if (eventStart == ntoday) {
                    info.el.classList.add("fc-current-event");
                } else {
                    info.el.classList.add("fc-future-event");
                }
            },

            events: 
                
                    @Html.Raw(JsonConvert.SerializeObject(Model))
                
                // more events here
            
        });
        calendar.render();
    });
</script>

